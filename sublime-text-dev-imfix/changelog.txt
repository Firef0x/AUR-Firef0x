Build 3059
----------
Release Date: 17 December 2013

    * Added tab scrolling, controlled by the enable_tab_scrolling setting
    * Added image preview when opening images
    * Encoding and line endings can be displayed in the status bar with the show_encoding and show_line_endings settings
    * Added settings caret_extra_top, caret_extra_bottom and caret_extra_width to control the caret size
    * Added index_exclude_patterns setting to control which files get indexed
    * Automatically closing windows when the last tab is dragged out
    * Changed tab close behavior: the neighboring tab is now always selected
    * When the last file is closed, a new transient file is created automatically
    * Ctrl+Tab ordering is stored in the session
    * Added minimap_scroll_to_clicked_text setting
    * Improved error messages when unable to save files
    * Auto complete now works as expected in macros
    * Minor improvements to Python syntax highlighting
    * Vintage: A block caret is now used
    * Vintage: Improved behavior of visual line mode with word wrapped lines
    * Find in Files will no longer block when FIFOs are encountered
    * Linux: Added menu hiding
    * Linux: Fixed incorrect handling of double clicks in the Find panel
    * Linux: Fixed incorrect underscore display in some menus
    * Posix: Fixed new files being created with unexpected permissions
    * Windows: SSE support is no longer required for 32 bit builds
    * API: Window.open_file now accepts an optional group parameter
    * API: Plugins may now call Settings.clear_on_change() within a callback from Settings.add_on_change()
    * API: Calling Settings.add_on_change() from within a settings change callback won't cause the added callback to be run

Build 3047
----------
Release Date: 27 June 2013

    * Beta is now open to non-registered users
    * Windows and Linux: Added High DPI support
    * Improved file change detection
    * Improved rendering performance
    * HTML tag auto completion is better behaved in script tags
    * Fixed a crash on exit that could occur when hot_exit is disabled
    * Linux and OSX: atomic_save is adaptively disabled when it's not possible to preserve file permissions
    * OSX: Fixed context menus not working when the application is in the background
    * Windows: Auto updater supports updating from unicode paths
    * API: Plugins in zip files are able to be overridden via files on disk
    * API: Added support for the termios module on Linux and OS X
    * API: Fixed Selection.contains
    * API: Fixed settings objects getting invalidated too early with cloned views

Build 3033
----------
Release Date: 7 May 2013

    * New auto update system for Windows and OS X
    * Previewing a file from the side bar will no longer add an entry to the OPEN FILES section of the side bar
    * Added Paste from History
    * Added setting 'auto_find_in_selection', for S2 style Find in Selection logic
    * Find panel has a drop down arrow to select previous items
    * Pressing right in the Goto Anything overlay will open the selected file without closing the overlay
    * Fixed several crash bugs
    * Further startup time improvements
    * Improved HTML completions when typing outside of tags
    * Fixed Close Tag not respecting self closing tags
    * PHP: Improved auto indenting for the alternative control syntax
    * Added setting always_prompt_for_file_reload
    * Improved handling of deleted files when restoring sessions
    * Deleting a file via the side bar will first close the corresponding view, if any
    * "Remove all Folders from Project" now prompts to confirm
    * Added telemetry. Telemetry is disabled by default, but can be turned on with the enable_telemetry setting
    * Using Google Breakpad to automatically report crashes
    * Updated syntax highlighting for PHP, Haskell and Pascal
    * Symlinks are followed by default in folders added to the side bar
    * Windows: Fixed erroneous entries in system menu
    * Windows: New style Open Folder dialogs are used on Vista and later
    * API: Significantly improved communication speed with plugin_host
    * API: Added view.close()
    * API: Added view.show_popup_menu()
    * API: Added is_valid() method to view and window, to determine if the handle has been invalidated
    * API: Added on_post_text_command and on_post_window_command
    * API: on_text_command and on_window command are now called when the menu is used
    * API: Added sublime.get_macro()
    * API: view.substr(point) now has the same semantics as S2 for out of bounds addresses
    * API: view.command_history(0, True) now returns the last modifying command, as expected

For more changelog, please visit http://www.sublimetext.com/3
